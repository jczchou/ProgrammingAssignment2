install.packages("gcookbook")
install.packages("gcookbook")
mtcars
plot(mtcars$wt)
head(mtcars)
plot(mtcars$wt, mtcars$mpg)
library(ggplot2)
install.packages("ggplot2")
qplot(mtcars$wt, mtcars$mpg)
library("ggplot2")
qplot(mtcars$wt, mtcars$mpg)
ggplot(mtcars, aes(x=wt, y=mpg)) + geom_line()
plot(pressure$temperature)
plot(pressure$temperature, pressure)
plot(pressure$temperature, pressure$pressure, type="l")
plot(pressure$temperature, pressure$pressure, type="l")
points(pressure$temprature, pressure$pressure)
points(pressure$temperature, pressure$pressure)
plot(pressure$temperature, pressure$pressure, type="l")
points(pressure$temperature, pressure$pressure)
plot(pressure$temperature, pressure$pressure, type="l", col="red")
points(pressure$temperature, pressure$pressure)
plot(pressure$temperature, pressure$pressure, type="l", col="red")
points(pressure$temperature, pressure$pressure, col="red")
barplot(mocars$wt)
barplot(mtcars$wt)
hist(mtcars$wt)
hist(mtcars$mpg)
head(mtcars)
ggplot(mtcars, aes(x=wt, y=mpg, fill=gear)) + geom_bar(position="dodge")
ggplot(mtcars, aes(x=wt, y=mpg, fill=gear)) + geom_bar(position="dodge", stat="identity")
ggplot(mtcars, aes(x=wt, y=mpg, fill=gear)) + geom_bar(position="dodge", stat="identity")
head(mtcars)
ggplot(mtcars, aes(x=wt, y=mpg, fill=am)) + geom_bar(position="dodge", stat="identity")
ggplot(mtcars, aes(x=wt)) + geom_bar()
ggplot(mtcars, aes(x=mpg)) + geom_bar()
ggplot(mtcars, aes(x=gears)) + geom_bar()
ggplot(mtcars, aes(x=gear)) + geom_bar()
BOD
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity")
library("ggplot")
library("ggplot2")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity" fill="red")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="red")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="blue")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color-red)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="red")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black") + scale_fill_brewer(palette="Pastel1")
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=1)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=10)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=2)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=2)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=1.2)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=0.1)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=0.6)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=0.8)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=0.9)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=1)
ggplot(BOD, aes(x=factor(Time), y=demand)) + geom_bar(stat="identity", fill="lightblue", color="black", width=0.95)
mtcars
library("shiny")
ls
mkdir doc
pwd
pwd()
install.packages("KernSmooth")
library(KernSmooth)
x <- 1:10
x
if(x > 5) {}
x <- 1:10
if(x > 5) {
x <- 0
}
x
x[6]
x
x[9]
x <- 0
x
x <- 2:11
x
x[2]
SEARCH\
SEARCH
search
search()
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
cube
cube(1)
cube(2)
cube(4)
cube2 <- pow(2)
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3, 1)
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
cube(100)
cube(10)
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
a rep(10, 4)
a <- rep(10, 4)
a
library(iris)
library(datasets)
iris
data_virginica <- iris$Species="virginica"
data_virginica <- iris[iris(, 1), 2, iris$Species="virginica"]
data_virginica <- iris[iris$Species="virginica"]
data_virginica <- iris[iris$Species=="virginica"]
data_virginica <- iris[Species=="virginica"]
data_virginica <- iris[Species="virginica"]
data_virginica <- iris[Species="virginica"]
iris$Species
iris$Species="virginica"
g <- iris$Species="virginica"
View(iris)
View(iris)
View(iris)
view(iris)
View(iris)
iris
iris[c(1)]
iris[c(5)]
iris[c(,1)]
iris[c(, 1)]
iris[c(1,1)]
iris[c(1,3)]
iris[c(1,5)]
library(datasets)
iris
library(datasets)
iris
iris[c(1,5)]
iris_v <- iris[iris$Species="virginica"]
iris_v <- subset(iris, Species = "virginica")
iris_v
iris_v <- subset(iris, Species == "virginica")
iris_v
apply(iris_v, 2, mean)
iris_v
apply(iris_v, 1, mean)
iris_v
lapply(iris_v, 1, mean)
lapply(iris_v, 2, mean)
apply(iris_v, 2, mean)
apply(iris_v, 1:2, mean)
apply(iris_v, [,1:2], mean)
by(iris[,1], Species, colMeans)
by(iris[,1:2], Species, colMeans)
by(iris[,1:2], colMeans)
by(iris[,1], colMeans)
by(iris_v[,1:2], Species, colMeans)
by(iris_v[,1], Species, colMeans)
by(iris_v[,1], colMeans)
by(iris_v[,1:4], colMeans)
lapply(iris_v, mean)
mtcars
gl(3,2,labels = c("green","red","yellow"))
gl(3,2,labels = c("green","red"))
gl(3,12,labels = c("green","red"))
gl(1,12,labels = c("green","red"))
gl(1,2,labels = c("green","red"))
matrix(c(1,2,3,11,12,13,4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
mm <- matrix(c(1,2,3,11,12,13,4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
solve(mm)
mm <- matrix(c(1,2,3,4,6,8,4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
solve(mm)
mm <- matrix(c(1,2,3,4,6,8,4,5,10), nrow = 3, ncol = 3, byrow = TRUE)
solve(mm)
setwd("C:/Users/jchou/git/ProgrammingAssignment2")
soure("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
makeCacheMatrix
cacheSolve
source("cachematrix.R")
y <<- 3
y
y <<- "3"
y
?assignOps
?<<-
?"<<-""
""
?"<<-"
source("cachematrix.R")
f <- make.accumulator()
f(1)
f(2)
f(3)
source("cachematrix.R")
source("cachematrix.R")
f(3)
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
g <- makeCacheMatrix
g
g(2)
setwd("C:/Users/jchou/git/test")
matrix(c(1,2,3,11,12,13,4,5,6), nrow = 3, ncol = 3, byrow = TRUE)
setwd("C:/Users/jchou/git/test")
source("cacheMeanVector.R")
ff <- makeVector(x <- c(1,2,3))
ff
ff$m
x
ff$x
ff <- makeVector(x <- c(1,2,3))
ff$cacheMean
ff
ff(2)
ff
ff(c(1,2,3)
ff(c(1,2,3))
ff(c(1,2,3))
ff
norm <- function(x) sqrt(x%*%x)
norm(1:4)
source("cacheMeanVector.R")
setwd("C:/Users/jchou/git/ProgrammingAssignment2")
source("cacheMatrix.R")
source("cacheMatrix.R")
g <- makeCacheMatrix()
g
h <- cacheSolve()
h <- cacheSolve(g)
source("cacheMatrix.R")
source("cacheMatrix.R")
source("cacheMatrix.R")
g <- makeCacheMatrix()
h <- cacheSolve(g)
